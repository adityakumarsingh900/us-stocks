{"version":3,"sources":["components/Tooltip/index.js","components/MenuButton/index.js","components/DropMenu/index.js","components/Notification/data.js","components/Notification/index.js","components/Avatar/index.js","components/Divider/index.js","components/UserDropMenu/components/CompanyDrop.js","components/ImageView/index.js","components/UserDropMenu/index.js","assets/logo.png","components/SideBar/index.js","pages/Home/components/StockBox.js","pages/Home/index.js","pages/Details/index.js","components/DashboardLayout/index.js","App.js","serviceWorker.js","reportWebVitals.js","index.js"],"names":["debounceOptions","leading","trailing","Tooltip","align","children","content","debounced","disabled","rest","useState","isVisible","setIsVisible","childRef","useRef","handleMouseEnter","handleMouseLeave","debouncedHandleMouseEnter","_","debounce","debouncedHandleMouseLeave","onMouseEnter","onMouseLeave","ref","Children","only","current","Drop","alignmentObj","right","left","bottom","top","getAlignmentObj","elevation","target","plain","Box","margin","pad","background","round","Text","color","size","defaultProps","withTheme","TooltipWrapper","isCollapsed","StyledSpan","styled","span","isActive","theme","global","colors","StyledText","hoverIndicator","StyledBox","MenuButton","label","icon","id","level","activeColor","isExpandable","defaultIsExpanded","isExpanded","hoverIndicatorOptions","onClick","textColor","sideMenuItem","pathname","openInNewTab","setIsExpanded","direction","justify","vertical","Button","as","fill","horizontal","style","marginLeft","display","dangerouslySetInnerHTML","__html","alignSelf","FormDown","border","e","Share","Collapsible","open","DropMenu","renderItems","dropAlign","DropButton","dropContent","profile","notifications","text","desc","NotificationStack","width","height","overflow","flex","shrink","grow","map","notification","index","gap","getUserAvatar","logo","weight","status","src","User","Notification","Chat","dropProps","borderRadius","ROUND_MAP","full","StyledImage","Image","props","edgeSize","Avatar","Boolean","fit","HorizantalDivider","VerticalDivider","type","css","Divider","name","image","charAt","toUpperCase","CompanyDrop","minWidth","opacity","alert","primary","Anchor","rounded","ImageView","UserDropMenu","className","SidebarButton","Sidebar","hover","setHover","collapsed","setCollapsed","history","useHistory","goto","url","push","ResponsiveContext","Consumer","position","transition","FormNext","FormPrevious","logoImage","alt","Nav","StatusInfoSmall","Projects","StockBox","code","price","offset","Card","Heading","Home","gainers","setGainers","losers","setLosers","setMostBought","useEffect","fetch","process","headers","then","response","json","data","basis","stock","Details","useParams","setStock","chartOptions","layout","grid","vertLines","visible","horzLines","timeScale","timeVisible","chart","createChart","document","getElementById","candlestickSeries","addCandlestickSeries","upColor","downColor","borderVisible","wickUpColor","wickDownColor","datum","bar","time","t","o","high","h","low","l","close","c","setData","fitContent","drawChart","results","LinkPrevious","DashboardLayout","min","SideBar","xlarge","href","textAlign","Linkedin","reverse","path","font","family","brand","focus","dullBlack","gray","lightGray","green","App","Grommet","isLocalhost","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","URL","origin","addEventListener","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.850faa64.chunk.js","sourcesContent":["import React, { Children, useRef, useState } from 'react';\nimport { Box, Drop, Text } from 'grommet';\nimport { withTheme } from 'styled-components';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\n\nconst debounceOptions = {\n  leading: true,\n  trailing: false,\n};\n\nconst Tooltip = ({ align, children, content, debounced, disabled, ...rest }) => {\n  const defaultIsVisible = false;\n  const [isVisible, setIsVisible] = useState(defaultIsVisible);\n\n  const childRef = useRef();\n\n  const handleMouseEnter = () => !disabled && setIsVisible(true);\n  const handleMouseLeave = () => setIsVisible(false);\n\n  const debouncedHandleMouseEnter = _.debounce(handleMouseEnter, 200, debounceOptions);\n  const debouncedHandleMouseLeave = _.debounce(handleMouseLeave, 200);\n\n  const getAlignmentObj = () => {\n    const alignmentObj = {};\n    switch (align) {\n      case 'left':\n        alignmentObj.right = 'left';\n        break;\n      case 'right':\n        alignmentObj.left = 'right';\n        break;\n      case 'top':\n        alignmentObj.bottom = 'top';\n        break;\n      case 'bottom':\n        alignmentObj.top = 'bottom';\n        break;\n      default:\n        break;\n    }\n    return alignmentObj;\n  };\n\n  return (\n    <>\n      <span\n        // style={width?width:{width: '100%'}}\n        // style={{display: 'inline-block'}}\n        onMouseEnter={debounced ? debouncedHandleMouseEnter : handleMouseEnter}\n        onMouseLeave={debounced ? debouncedHandleMouseLeave : handleMouseLeave}\n        ref={childRef}\n      >\n        {Children.only(children)}\n      </span>\n      {childRef.current && isVisible && (\n        <Drop align={getAlignmentObj()} elevation=\"small\" target={childRef.current} plain>\n          <Box align=\"center\" margin=\"xsmall\" pad=\"small\" background=\"dark-3\" round=\"xsmall\" {...rest}>\n            <Text color=\"text\" size=\"small\">\n              {content}\n            </Text>\n          </Box>\n        </Drop>\n      )}\n    </>\n  );\n};\n\nTooltip.defaultProps = {\n  align: 'right',\n  debounced: true,\n  disabled: false,\n};\n\nTooltip.propTypes = {\n  align: PropTypes.oneOf(['bottom', 'left', 'right', 'top']),\n  content: PropTypes.string,\n  bottom: PropTypes.bool,\n  debounced: PropTypes.bool,\n  disabled: PropTypes.bool,\n};\n\nexport default withTheme(Tooltip);\n","import PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { Box, Button, Collapsible, Text } from 'grommet';\nimport { FormDown } from 'grommet-icons/icons/FormDown';\nimport { FormNext } from 'grommet-icons/icons/FormNext';\nimport { Share } from 'grommet-icons';\nimport styled, { withTheme } from 'styled-components';\n\n// Core Imports\nimport Tooltip from 'components/Tooltip';\n\nconst TooltipWrapper = ({ children, isCollapsed, content }) => {\n  if (isCollapsed) return <Tooltip content={content}>{children}</Tooltip>;\n  else return children;\n};\n\nconst StyledSpan = styled.span`\n  svg {\n    fill: ${({ isActive, theme }) =>\n      isActive\n        ? theme.global.colors['sidebar-svg-active'] + `!important`\n        : theme.global.colors['sidebar-svg'] + `!important`};\n  }\n`;\n\nconst StyledText = styled(Text)`\n  color: ${({ isActive, hoverIndicator, theme }) =>\n    isActive ? theme.global.colors['sidebar-label-active'] : theme.global.colors['sidebar-label']};\n  font-weight: ${({ theme }) =>\n    theme.global.colors['sidebar-label-bold'] ? theme.global.colors['sidebar-label-bold'] : null};\n`;\n\nconst StyledBox = styled(Box)`\n  &:hover svg {\n    fill: ${({ isActive, theme }) => theme.global.colors['sidebar-svg-hover'] + `!important`};\n  }\n  &:hover span {\n    color: ${({ isActive, theme }) => theme.global.colors['sidebar-label-hover'] + `!important`};\n  }\n`;\n\nconst MenuButton = ({\n  children,\n  label,\n  id,\n  icon,\n  level,\n  isActive,\n  activeColor,\n  isExpandable,\n  isExpanded: defaultIsExpanded,\n  hoverIndicatorOptions,\n  onClick,\n  isCollapsed,\n  textColor,\n  sideMenuItem,\n  pathname,\n  openInNewTab,\n  theme,\n  ...rest\n}) => {\n  const [isExpanded, setIsExpanded] = useState(defaultIsExpanded);\n  const handleClick = () => {\n    setIsExpanded(!isExpanded);\n    onClick(!isExpanded);\n  };\n\n  return (\n    <>\n      <StyledBox\n        direction=\"row\"\n        align=\"center\"\n        justify=\"between\"\n        background={isActive ? activeColor : null}\n        margin={{ vertical: isCollapsed ? 'xsmall' : '0' }}\n      >\n        <Button\n          onClick={handleClick}\n          as=\"div\"\n          fill\n          hoverIndicator={isActive ? false : hoverIndicatorOptions ? hoverIndicatorOptions : true}\n          {...rest}\n        >\n          <TooltipWrapper content={label} isCollapsed={isCollapsed}>\n            <Box direction=\"column\" justify=\"between\">\n              <Box\n                pad={{\n                  vertical: 'small',\n                  horizontal: 'medium',\n                }}\n                direction=\"row\"\n                justify={isCollapsed ? 'center' : 'between'}\n                style={{\n                  marginLeft: !isCollapsed ? `${16 * level}px` : '0px',\n                }}\n              >\n                <Button\n                  plain\n                  as=\"div\"\n                  style={{ display: 'flex' }}\n                  icon={\n                    icon && typeof icon === 'string' ? (\n                      <StyledSpan\n                        theme={theme}\n                        isActive={isActive}\n                        style={{ display: 'flex' }}\n                        dangerouslySetInnerHTML={{ __html: icon }}\n                      />\n                    ) : (\n                      icon\n                    )\n                  }\n                  label={\n                    isCollapsed ? (\n                      ''\n                    ) : (\n                      <StyledText theme={theme} isActive={isActive} color={textColor}>\n                        {label}\n                      </StyledText>\n                    )\n                  }\n                />\n                {!isCollapsed && isExpandable && (\n                  <Box alignSelf=\"end\">{isExpanded ? <FormDown size=\"20px\" /> : <FormNext size=\"20px\" />}</Box>\n                )}\n                {sideMenuItem === true && !isExpandable && !isCollapsed && (\n                  <Box\n                    pad={{ bottom: '2px', top: 'xsmall', horizontal: 'xsmall' }}\n                    alignSelf=\"end\"\n                    round=\"xsmall\"\n                    border={{ color: 'brand', size: '1px' }}\n                    onClick={e => {\n                      openInNewTab({ label, pathname: `/${pathname}` });\n                    }}\n                  >\n                    <Share color=\"brand\" size=\"12px\" />\n                  </Box>\n                )}\n              </Box>\n            </Box>\n          </TooltipWrapper>\n        </Button>\n      </StyledBox>\n      <Collapsible open={isExpanded}>{children}</Collapsible>\n    </>\n  );\n};\n\nMenuButton.defaultProps = {\n  icon: null,\n  isActive: false,\n  activeColor: 'brand',\n  isCollapsed: false,\n  isExpandable: false,\n  isExpanded: false,\n  level: 0,\n  onClick: () => {},\n  textColor: 'text',\n};\n\nMenuButton.propTypes = {\n  icon: PropTypes.oneOfType([PropTypes.string, PropTypes.element, PropTypes.object]),\n  isActive: PropTypes.bool,\n  activeColor: PropTypes.string,\n  isCollapsed: PropTypes.bool,\n  isExpandable: PropTypes.bool,\n  isExpanded: PropTypes.bool,\n  level: PropTypes.number || PropTypes.string,\n  onClick: PropTypes.func,\n  textColor: PropTypes.string,\n};\n\nexport default withTheme(MenuButton);\n","import React from 'react';\nimport { Box, DropButton } from 'grommet';\n// import Avatar from 'granite-admin/core/components/Avatar'\nimport MenuButton from 'components/MenuButton';\nimport PropType from 'prop-types';\n\nconst DropMenu = ({ hoverIndicatorOptions, label, icon, renderItems, isCollapsed, dropAlign, ...rest }) => {\n  return (\n    <Box>\n      <DropButton\n        dropAlign={dropAlign || { top: 'bottom', right: 'right' }}\n        dropContent={renderItems()}\n        elevation=\"medium\"\n        {...rest}\n      >\n        <MenuButton isCollapsed={isCollapsed} label={label} hoverIndicatorOptions={hoverIndicatorOptions} icon={icon} />\n      </DropButton>\n    </Box>\n  );\n};\n\nDropMenu.defaultProps = {\n  isCollapsed: true,\n  profile: {},\n  renderItems: null,\n};\n\nDropMenu.propTypes = {\n  isCollapsed: PropType.bool,\n  profile: PropType.object,\n  renderItems: PropType.func,\n  dropAlign: PropType.object,\n};\n\nexport default DropMenu;\n","const notifications = [\n  {\n    text: \"AAPL\",\n    desc: \"Apple Stock Slips After U.S. Sues iPhone Maker\",\n  },\n  {\n    text: \"META\",\n    desc: \"Nvidia, Meta Stock Gains Turn Magnificent Seven Into Two\",\n  }\n];\n\nexport default notifications;","// Lib Imports\nimport React from 'react';\nimport { Avatar, Box, Text } from 'grommet';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { User, Chat } from \"grommet-icons\";\n\n// Core Imports\nimport DropMenu from 'components/DropMenu';\n\nimport notifications from './data.js';\n\nconst StyledText = styled(Text)`\n  a {\n    color: #0e84ad;\n    text-decoration: underline;\n  }\n  a:hover {\n    color: #fbab31;\n  }\n`;\n\nconst Notification = ({ isCollapsed }) => {\n\n  return (\n    <DropMenu\n      icon={\n          <Chat size=\"20px\" />\n      }\n      isCollapsed={isCollapsed}\n      label={<Text>Notifications</Text>}\n      dropProps={{ style: { borderRadius: \"6px\" } }}\n      dropAlign={{ bottom: \"bottom\", left: \"right\" }}\n      renderItems={() => <NotificationStack notifications={notifications} />}\n    />\n  );\n};\n\nconst NotificationStack = ({\n  notifications,\n}) => {\n\n  return (\n    <Box width=\"medium-l\" height=\"medium-l\" overflow={{ vertical: \"auto\" }}>\n      <Box\n        flex={{ shrink: 0 }}\n        background=\"background-contrast.dark\"\n        pad=\"medium\"\n        justify=\"center\"\n        width=\"100%\"\n      >\n        <Text color=\"white\">Notifications</Text>\n      </Box>\n      <Box flex={{ grow: 1 }} background=\"dark-1\">\n        {notifications.map((notification, index) => (\n          <Box\n            key={index}\n            direction=\"row-responsive\"\n            align=\"center\"\n            justify=\"between\"\n            pad={{ vertical: \"small\", left: \"small\", right: \"medium\" }}\n            hoverIndicator\n          >\n            <Box direction=\"row\" gap=\"small\" align=\"center\">\n              {getUserAvatar(notification.logo)}\n              <Box width=\"medium\">\n                <StyledText\n                  weight=\"bold\"\n                  dangerouslySetInnerHTML={{ __html: notification.text }}\n                />\n                <Text color=\"status-disabled\">\n                    <Text>{notification.desc}</Text>\n                </Text>\n              </Box>\n            </Box>\n            {!notification.status && (\n              <Box\n                flex={{ shrink: 0 }}\n                round=\"full\"\n                background=\"secondary\"\n                height=\"8px\"\n                width=\"8px\"\n              />\n            )}\n          </Box>\n        ))}\n      </Box>\n    </Box>\n  );\n};\n\nconst getUserAvatar = (logo) => {\n  return (\n    <Box flex=\"grow\">\n      <Avatar src={logo} background=\"brand-light\" round=\"full\">\n        <User />\n      </Avatar>\n    </Box>\n  );\n};\n\nNotification.propTypes = {\n  isCollapsed: PropTypes.bool,\n};\n\nexport default Notification;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Box, Image } from 'grommet';\n\nconst ROUND_MAP = {\n  full: '100%',\n};\n\nconst StyledImage = styled(Image)`\n  border-radius: ${props => ROUND_MAP[props.round] || props.theme.global.edgeSize[props.round]};\n  -webkit-border-radius: ${props => ROUND_MAP[props.round] || props.theme.global.edgeSize[props.round]};\n  -moz-border-radius: ${props => ROUND_MAP[props.round] || props.theme.global.edgeSize[props.round]};\n`;\n\nconst Avatar = ({ children, src, size, width, height, ...rest }) => {\n  return (\n    <Box\n      align={Boolean(src) === false ? 'center' : null}\n      background=\"comp-1\"\n      justify=\"center\"\n      round={rest.round}\n      width={width || size}\n      height={height || size}\n    >\n      {src && <StyledImage src={src} {...rest} fit=\"cover\" />}\n      {children}\n    </Box>\n  );\n};\n\nAvatar.defaultProps = {\n  size: 'medium',\n};\n\nAvatar.propTypes = {\n  size: PropTypes.oneOf(['xxsmall', 'xsmall', 'small', 'medium', 'large', 'xlarge', 'any CSS size']),\n  height: PropTypes.string,\n  width: PropTypes.string,\n};\n\nexport default Avatar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Box } from 'grommet';\nimport styled, { css, withTheme } from 'styled-components';\n\nconst HorizantalDivider = styled(Box)`\n  display: block;\n  clear: both;\n  width: 100%;\n  min-width: 100%;\n  height: ${props => props.theme.global.edgeSize[props.size]};\n  ${'' /* margin-top: ${props => props.theme.global.edgeSize.small}; */}\n  ${'' /* margin-bottom: ${props => props.theme.global.edgeSize.small}; */}\n    background: ${props => props.theme.global.colors[props.color]};\n`;\nconst VerticalDivider = styled(Box)`\n  position: relative;\n  display: inline-block;\n  width: ${props => props.theme.global.edgeSize[props.size]};\n  height: 0.9em;\n  ${'' /* margin-left: ${props => props.theme.global.edgeSize.small}; */}\n  ${'' /* margin-right: ${props => props.theme.global.edgeSize.small}; */}\n  background: ${props => props.theme.global.colors[props.color]};\n\n  ${props =>\n    props.type === 'vertical' &&\n    css`\n      align-self: ${props => (props.align ? props.align : 'center')};\n    `}\n`;\n\nconst Divider = ({ type, ...rest }) => {\n  return type === 'vertical' ? <VerticalDivider type={type} {...rest} /> : <HorizantalDivider type={type} {...rest} />;\n};\n\nDivider.defaultProps = {\n  type: 'horizontal',\n  color: 'border',\n  size: 'hair',\n};\n\nDivider.propTypes = {\n  color: PropTypes.string,\n  type: PropTypes.oneOf(['horizontal', 'vertical']),\n  size: PropTypes.string,\n};\n\nexport default withTheme(Divider);\n","import React from \"react\";\nimport { Anchor, Box, Button, Text } from \"grommet\";\n\nimport Avatar from \"components/Avatar\";\nimport Divider from \"components/Divider\";\n\nconst getUserAvatar = (name, image, size) => {\n  if (Boolean(name) === false) return;\n\n  return (\n    <Box flex=\"grow\">\n      <Avatar\n        src={image ? image : null}\n        width={size}\n        height={size}\n        round=\"full\"\n      >\n        <Text color=\"white\" size=\"small\">\n          {!image && name.charAt(0).toUpperCase()}\n        </Text>\n      </Avatar>\n    </Box>\n  );\n};\n\nconst CompanyDrop = () => {\n  const signOut = () => {\n    alert(\"signOut\");\n  };\n\n  return (\n    <Box\n      pad={{ top: \"xsmall\", bottom: \"medium\" }}\n      width=\"medium\"\n      background=\"background-contrast.dark\"\n      flex={{ shrink: 0 }}\n    >\n      <Box align=\"center\" gap=\"xsmall\">\n        {getUserAvatar(\n          \"Batman\",\n          \"https://www.vhv.rs/dpng/d/52-527377_batman-face-cartoon-png-transparent-png.png\",\n          \"xxsmall\"\n        )}\n        <Text>Batman</Text>\n      </Box>\n\n      <Box margin={{ vertical: \"xsmall\" }}>\n        <Divider\n          color=\"none\"\n          style={{ width: \"auto\", minWidth: \"auto\" }}\n          margin={{ horizontal: \"small\" }}\n          background={{ color: \"border\", opacity: \"medium\" }}\n        />\n      </Box>\n      <Box align=\"center\" gap=\"small\">\n        <Button\n          size=\"xsmall\"\n          label=\"Logout\"\n          onClick={signOut}\n          primary\n          color=\"text\"\n        />\n        <Box direction=\"row\" gap=\"medium\">\n          <Anchor\n            as=\"span\"\n            size=\"small\"\n            color=\"info\"\n            label=\"Terms and Conditions\"\n          />\n          <Anchor as=\"span\" size=\"small\" color=\"info\" label=\"Privacy Policy\" />\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default CompanyDrop;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Box, Image } from 'grommet';\n\nconst StyledImage = styled(Image)`\n  border-radius: ${props =>\n    props.rounded === true ? '100%' : typeof props.rounded === 'string' ? props.rounded : '0%'};\n  -webkit-border-radius: ${props =>\n    props.rounded === true ? '100%' : typeof props.rounded === 'string' ? props.rounded : '0%'};\n  -moz-border-radius: ${props =>\n    props.rounded === true ? '100%' : typeof props.rounded === 'string' ? props.rounded : '0%'};\n`;\n\nconst ImageView = ({ src, size, rounded }) => {\n  return (\n    <Box\n      align=\"center\"\n      justify=\"center\"\n      round={rounded === true ? '100%' : typeof rounded === 'string' ? rounded : null}\n      width={size}\n      height={size}\n    >\n      {src && <StyledImage src={src} width={size} height={size} fit=\"contain\" rounded={rounded} />}\n    </Box>\n  );\n};\n\nImageView.defaultProps = {\n  size: 'medium',\n};\n\nImageView.propTypes = {\n  src: PropTypes.string,\n  size: PropTypes.oneOf(['xxsmall', 'xsmall', 'small', 'medium', 'large', 'xlarge', 'any CSS size']),\n  rounded: PropTypes.string,\n};\n\nexport default ImageView;\n","import React from 'react';\nimport { Box, Text } from 'grommet';\nimport PropTypes from 'prop-types';\n\nimport DropMenu from 'components/DropMenu';\nimport CompanyDrop from './components/CompanyDrop';\nimport ImageView from 'components/ImageView';\n\nconst getOrganisationAvatar = () => {\n  return (\n    <ImageView\n      src=\"https://s.clipartkey.com/mpngs/s/120-1208070_how-to-draw-batmans-face-draw-batman-face.png\"\n      size=\"27px\"\n      rounded\n    />\n  );\n};\n\nconst UserDropMenu = ({ isCollapsed }) => {\n  return (\n    <DropMenu\n      icon={getOrganisationAvatar()}\n      className=\"Aditya\"\n      isCollapsed={isCollapsed}\n      label={\n        <Box pad={{ horizontal: \"xxsmall\" }}>\n          <Text>Batman</Text>\n          <Text size=\"xsmall\">Gotham</Text>\n        </Box>\n      }\n      dropProps={{ style: { borderRadius: \"0px 6px 0px 0px\" } }}\n      dropAlign={{ bottom: \"bottom\", left: \"right\" }}\n      renderItems={() => <CompanyDrop />}\n    />\n  );\n};\n\nUserDropMenu.propTypes = {\n  isCollapsed: PropTypes.bool,\n};\n\nexport default UserDropMenu;\n","export default __webpack_public_path__ + \"static/media/logo.6f8915f6.png\";","// lib imports\nimport React, { useState } from 'react';\nimport {\n  Box,\n  Image,\n  Button,\n  ResponsiveContext,\n  Nav,\n} from \"grommet\";\nimport { useHistory } from \"react-router-dom\";\n\nimport {\n  Projects,\n  StatusInfoSmall,\n  FormNext,\n  FormPrevious,\n  Home,\n} from \"grommet-icons\";\n\nimport Notification from 'components/Notification';\nimport UserDropMenu from 'components/UserDropMenu';\n\n// application imports\nimport logoImage from 'assets/logo.png';\n\nconst width = '256px';\n\nconst SidebarButton = ({ icon, label, ...rest }) => (\n  <Box pad=\"small\" fill=\"horizontal\">\n    <Button\n      gap=\"medium\"\n      alignSelf=\"start\"\n      plain\n      icon={icon}\n      label={label}\n      {...rest}\n    />\n  </Box>\n);\n\nconst Sidebar = () => {\n  const [hover, setHover] = useState(false);\n  const [collapsed, setCollapsed] = useState(true);\n  let history = useHistory();\n\n  const goto = (url) => history.push(url);\n\n  return (\n    <ResponsiveContext.Consumer>\n      {size => {\n        const isCollapsed = ((size === 'small') || collapsed);\n\n        return (\n          <Box\n            width={isCollapsed && !hover ? \"58px\" : width}\n            style={{\n              minWidth: isCollapsed && !hover ? \"58px\" : width,\n              position: \"relative\",\n              transition: \"0.5s\",\n            }}\n            elevation=\"small\"\n            background=\"black\"\n          >\n            <SidebarButton\n              icon={isCollapsed ? <FormNext /> : <FormPrevious />}\n              label={<Image src={logoImage} alt=\"Company Logo\" width=\"120px\" />}\n              onClick={() => setCollapsed(!collapsed)}\n            />\n            <Box\n              flex\n              onMouseEnter={() => setHover(true)}\n              onMouseLeave={() => setHover(false)}\n            >\n              <Nav\n                gap=\"small\"\n                flex\n                overflow={{ vertical: \"auto\", horizontal: \"hidden\" }}\n              >\n                <SidebarButton\n                  icon={<Home />}\n                  label=\"Dashboard\"\n                  onClick={() => goto(\"/\")}\n                />\n                <SidebarButton\n                  icon={<StatusInfoSmall />}\n                  label=\"Stocks\"\n                  onClick={() => goto(\"/dummy\")}\n                />\n                <SidebarButton\n                  icon={<Projects />}\n                  label=\"Mutual Funds\"\n                  onClick={() => goto(\"/dummy\")}\n                />\n              </Nav>\n              <Notification isCollapsed={isCollapsed && !hover} />\n              <UserDropMenu isCollapsed={isCollapsed && !hover} />\n            </Box>\n          </Box>\n        );\n      }}\n    </ResponsiveContext.Consumer>\n  );\n};\n\nexport default Sidebar;\n","import { Box, Card, Heading } from \"grommet\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function StockBox({ code, name, price, offset}) {\n  const history = useHistory();\n  return (\n    <Card height=\"small\" width=\"small\" background=\"light-1\" onClick={() => history.push(`/detail/${code}`)}>\n      <Box align=\"start\" pad=\"small\">\n        <Heading margin=\"none\" level=\"5\" color=\"gray\">{code}</Heading><br />\n        <Heading margin=\"none\" level=\"5\">{name}</Heading>\n      </Box>\n      <Box pad=\"small\" fill=\"vertical\" justify=\"end\" align=\"end\">\n        <Heading level=\"5\"  margin=\"none\">${price}</Heading>\n        {+offset > 0\n          ? <Heading level=\"5\"  margin=\"none\" color=\"green\">{offset}</Heading>\n          : <Heading level=\"5\"  margin=\"none\" color=\"red\">{offset}</Heading>\n        }\n      </Box>\n    </Card>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Box, Heading, Text } from \"grommet\";\nimport StockBox from \"./components/StockBox\";\n\nconst Home = () => {\n  const [gainers, setGainers] = useState([]);\n  const [losers, setLosers] = useState([]);\n  const [mostBought, setMostBought] = useState([]);\n\n  useEffect(() => {\n\n    fetch(`${process.env.PUBLIC_URL}/jsons/most_bought.json`,{\n      headers : { \n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n       }\n    })\n      .then((response) => response.json())\n      .then((data) => setMostBought(data));\n\n    fetch(`${process.env.PUBLIC_URL}/jsons/top_gainers.json`,{\n      headers : { \n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n       }\n    })\n      .then((response) => response.json())\n      .then((data) => setGainers(data));\n\n    fetch(`${process.env.PUBLIC_URL}/jsons/top_losers.json`,{\n      headers : { \n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n       }\n    })\n      .then((response) => response.json())\n      .then((data) => setLosers(data));\n\n  }, [])\n  \n  return (\n    <Box direction=\"row\">\n      <Box basis=\"70%\">\n        {/* <Heading level=\"3\">Most Bought</Heading>\n        <Box direction=\"row\" gap=\"medium\" pad=\"medium\">\n          {mostBought.map((stock) => \n            <StockBox\n              code={stock.code}\n              name={stock.name}\n              price={stock.price}\n              offset={stock.offset}\n            />\n          )}\n        </Box> */}\n\n        <Heading level=\"3\">Top Gainers</Heading>\n        <Box direction=\"row\" gap=\"medium\" pad=\"medium\">\n          {gainers.map((stock) => \n            <StockBox\n              code={stock.code}\n              name={stock.name}\n              price={stock.price}\n              offset={stock.offset}\n            />\n          )}\n        </Box>\n\n        <Heading level=\"3\">Top Losers</Heading>\n        <Box direction=\"row\" gap=\"medium\" pad=\"medium\">\n          {losers.map((stock) => \n            <StockBox\n              code={stock.code}\n              name={stock.name}\n              price={stock.price}\n              offset={stock.offset}\n            />\n          )}\n        </Box>\n      </Box>\n      <Box basis=\"30%\" pad=\"large\">\n        <Heading level=\"3\">Your Investment</Heading>\n        <Box pad=\"medium\" border={{ color: 'lightGray', size: 'small' }} round=\"xsmall\" fill=\"horizontal\">\n          <Box direction=\"row\" justify=\"between\">\n            <Box>\n              <Heading level=\"5\"  margin=\"none\" color=\"green\">+ $11,375</Heading>\n            </Box>\n            <Box>\n              <Heading level=\"5\"  margin=\"none\">$68,142</Heading>\n            </Box>\n          </Box>\n          <Box direction=\"row\" justify=\"between\">\n            <Text color=\"gray\" size=\"small\">Total Returns</Text>\n            <Text color=\"gray\" size=\"small\">Current Value</Text>\n          </Box>\n        </Box>\n      </Box>\n    </Box>\n)};\n\nexport default Home;\n","import { Box, Heading, Text } from \"grommet\";\nimport { LinkPrevious } from \"grommet-icons\";\nimport { createChart } from \"lightweight-charts\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom/cjs/react-router-dom.min\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function Details() {\n  const { id } = useParams();\n  const history = useHistory();\n  const [stock, setStock] = useState({});\n\n  useEffect(() => {\n    fetch(`${process.env.PUBLIC_URL}/jsons/details.json`,{\n      headers : { \n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        drawChart(data.results);\n        setStock({\n          name: data.name,\n          open: data.open,\n          high: data.high,\n          low: data.low,\n          close: data.close,\n        })\n      });\n    \n  }, [id]);\n\n  function drawChart(data) {\n    const chartOptions = {\n      layout: {\n        textColor: \"black\",\n        background: { type: \"solid\", color: \"white\" },\n      },\n      grid: {\n        vertLines: {\n          visible: false,\n        },\n        horzLines: {\n          visible: false,\n        },\n      },\n      timeScale: {\n        timeVisible: true, // This line makes the time visible\n      },\n    };\n    const chart = createChart(\n      document.getElementById(\"container\"),\n      chartOptions\n    );\n    const candlestickSeries = chart.addCandlestickSeries({\n      upColor: \"#26a69a\",\n      downColor: \"#ef5350\",\n      borderVisible: false,\n      wickUpColor: \"#26a69a\",\n      wickDownColor: \"#ef5350\",\n    });\n\n    const datum = data.map((bar) => ({\n        time: bar.t/1000,\n        open: bar.o,\n        high: bar.h,\n        low: bar.l,\n        close: bar.c,\n      }));\n\n    candlestickSeries.setData(datum);\n\n    chart.timeScale().fitContent();\n  }\n\n  return (\n    <Box pad=\"medium\">\n      <Box direction=\"row\">\n        <Box fill>\n          <LinkPrevious color='plain' size='large' onClick={() => history.push('/home')}/>\n          <Heading level={2}>{id}</Heading>\n        </Box>\n        <Box direction=\"row\">\n          <Text level={5}>Open <Text weight=\"bold\" color=\"green\">${stock.open}</Text></Text>\n          <Text level={5}>High <Text weight=\"bold\" color=\"green\">${stock.high}</Text></Text>\n          <Text level={5}>Low <Text weight=\"bold\" color=\"green\">${stock.low}</Text></Text>\n          <Text level={5}>Close <Text weight=\"bold\" color=\"green\">${stock.close}</Text></Text>\n        </Box>\n      </Box>\n      <div id=\"container\" style={{ height: \"450px\" }}></div>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { Box, Anchor, Text } from \"grommet\";\nimport { Linkedin } from \"grommet-icons\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport SideBar from \"components/SideBar\";\n\nimport Home from 'pages/Home';\nimport Details from \"pages/Details\";\n\nconst DashboardLayout = () => (\n  <Box direction=\"row\" height={{ min: \"100vh\" }} fill>\n    <SideBar xlarge />\n    <Box fill pad=\"xsmall\" height={{ min: \"100vh\" }}>\n      <Box fill align=\"end\">\n        <Anchor\n          href=\"https://www.linkedin.com/in/aditya-kumar-singh-a8b584106/\"\n          target=\"_blank\"\n          textAlign=\"center\"\n          size=\"small\"\n          label=\"Designed By Aditya\"\n          color=\"black\"\n          icon={<Linkedin color=\"black\" />}\n          reverse\n        />\n      </Box>\n      <Box margin={{ top: \"large\" }}>\n        <Switch>\n          <Route path=\"/dummy\">\n            <Text>Hello</Text>\n          </Route>\n          <Route path=\"/detail/:id\">\n            <Details />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </Box>\n    </Box>\n  </Box>\n);\n\nexport default DashboardLayout;\n","import { Grommet } from \"grommet\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport DashboardLayout from \"components/DashboardLayout\";\n\nconst theme = {\n  global: {\n    font: {\n      family: \"Roboto\",\n      size: \"18px\",\n      height: \"20px\",\n    },\n    colors: {\n      brand: \"#228BE6\",\n      focus: \"#228BE6\",\n      dullBlack: \"#333333\",\n      gray: \"#666666\",\n      lightGray: \"#ccc\",\n      green: \"#4CAF50\",\n    },\n  },\n};\n\nfunction App() {\n  return (\n    <Router>\n      <Grommet theme={theme}>\n        <DashboardLayout />\n      </Grommet>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from \"./serviceWorker\";\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\nserviceWorker.register();"],"sourceRoot":""}